// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixMul_matrixMul_TRN_10.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixMul_matrixMul_TRN_10::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixMul_matrixMul_TRN_10::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> matrixMul_matrixMul_TRN_10::ap_ST_st1_fsm_0 = "1";
const sc_lv<6> matrixMul_matrixMul_TRN_10::ap_ST_st2_fsm_1 = "10";
const sc_lv<6> matrixMul_matrixMul_TRN_10::ap_ST_st3_fsm_2 = "100";
const sc_lv<6> matrixMul_matrixMul_TRN_10::ap_ST_st4_fsm_3 = "1000";
const sc_lv<6> matrixMul_matrixMul_TRN_10::ap_ST_st5_fsm_4 = "10000";
const sc_lv<6> matrixMul_matrixMul_TRN_10::ap_ST_st6_fsm_5 = "100000";
const sc_lv<32> matrixMul_matrixMul_TRN_10::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matrixMul_matrixMul_TRN_10::ap_const_lv1_1 = "1";
const sc_lv<32> matrixMul_matrixMul_TRN_10::ap_const_lv32_1 = "1";
const sc_lv<32> matrixMul_matrixMul_TRN_10::ap_const_lv32_2 = "10";
const sc_lv<1> matrixMul_matrixMul_TRN_10::ap_const_lv1_0 = "0";
const sc_lv<32> matrixMul_matrixMul_TRN_10::ap_const_lv32_3 = "11";
const sc_lv<32> matrixMul_matrixMul_TRN_10::ap_const_lv32_4 = "100";
const sc_lv<32> matrixMul_matrixMul_TRN_10::ap_const_lv32_5 = "101";
const sc_lv<4> matrixMul_matrixMul_TRN_10::ap_const_lv4_0 = "0000";

matrixMul_matrixMul_TRN_10::matrixMul_matrixMul_TRN_10(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_address);
    sensitive << ( C_req_full_n );
    sensitive << ( C_addr_reg_268 );
    sensitive << ( is_0iter_reg_286 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_C_dataout);
    sensitive << ( C_req_full_n );
    sensitive << ( Csub_block_load_reg_290 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_C_req_din);
    sensitive << ( C_req_full_n );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_C_req_write);
    sensitive << ( C_req_full_n );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_C_rsp_read);

    SC_METHOD(thread_C_size);
    sensitive << ( blockDim_x );
    sensitive << ( C_req_full_n );
    sensitive << ( is_0iter_reg_286 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_Csub_block_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_19_cast_fu_205_p1 );

    SC_METHOD(thread_Csub_block_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond2_fu_131_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond2_fu_131_p2 );

    SC_METHOD(thread_ap_sig_100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_115);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_137);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_23 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_72 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_81 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_100 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_115 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_137 );

    SC_METHOD(thread_exitcond1_fu_147_p2);
    sensitive << ( blockDim_y );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( threadIdx_y_reg_98 );

    SC_METHOD(thread_exitcond2_fu_131_p2);
    sensitive << ( blockDim_z );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( threadIdx_2_reg_87 );

    SC_METHOD(thread_exitcond_fu_185_p2);
    sensitive << ( blockDim_x );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( threadIdx_reg_120 );

    SC_METHOD(thread_is_0iter_fu_210_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( exitcond_fu_185_p2 );
    sensitive << ( threadIdx_reg_120 );

    SC_METHOD(thread_next_mul_fu_142_p2);
    sensitive << ( wB );
    sensitive << ( phi_mul_reg_109 );

    SC_METHOD(thread_threadIdx_x_fu_190_p2);
    sensitive << ( threadIdx_reg_120 );

    SC_METHOD(thread_threadIdx_z_fu_136_p2);
    sensitive << ( threadIdx_2_reg_87 );

    SC_METHOD(thread_tmp_17_cast_fu_162_p3);
    sensitive << ( tmp_fu_158_p1 );

    SC_METHOD(thread_tmp_19_cast_fu_205_p1);
    sensitive << ( tmp_8_fu_200_p2 );

    SC_METHOD(thread_tmp_5_fu_196_p1);
    sensitive << ( threadIdx_reg_120 );

    SC_METHOD(thread_tmp_6_fu_152_p2);
    sensitive << ( threadIdx_y_reg_98 );

    SC_METHOD(thread_tmp_7_fu_175_p1);
    sensitive << ( tmp_s_fu_170_p2 );

    SC_METHOD(thread_tmp_8_fu_200_p2);
    sensitive << ( tmp_17_cast_reg_263 );
    sensitive << ( tmp_5_fu_196_p1 );

    SC_METHOD(thread_tmp_fu_158_p1);
    sensitive << ( threadIdx_y_reg_98 );

    SC_METHOD(thread_tmp_s_fu_170_p2);
    sensitive << ( c_r );
    sensitive << ( phi_mul_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( C_req_full_n );
    sensitive << ( exitcond1_fu_147_p2 );
    sensitive << ( exitcond_fu_185_p2 );
    sensitive << ( exitcond2_fu_131_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixMul_matrixMul_TRN_10_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, blockDim_x, "(port)blockDim_x");
    sc_trace(mVcdFile, blockDim_y, "(port)blockDim_y");
    sc_trace(mVcdFile, blockDim_z, "(port)blockDim_z");
    sc_trace(mVcdFile, C_req_din, "(port)C_req_din");
    sc_trace(mVcdFile, C_req_full_n, "(port)C_req_full_n");
    sc_trace(mVcdFile, C_req_write, "(port)C_req_write");
    sc_trace(mVcdFile, C_rsp_empty_n, "(port)C_rsp_empty_n");
    sc_trace(mVcdFile, C_rsp_read, "(port)C_rsp_read");
    sc_trace(mVcdFile, C_address, "(port)C_address");
    sc_trace(mVcdFile, C_datain, "(port)C_datain");
    sc_trace(mVcdFile, C_dataout, "(port)C_dataout");
    sc_trace(mVcdFile, C_size, "(port)C_size");
    sc_trace(mVcdFile, Csub_block_address0, "(port)Csub_block_address0");
    sc_trace(mVcdFile, Csub_block_ce0, "(port)Csub_block_ce0");
    sc_trace(mVcdFile, Csub_block_q0, "(port)Csub_block_q0");
    sc_trace(mVcdFile, c_r, "(port)c_r");
    sc_trace(mVcdFile, wB, "(port)wB");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_23, "ap_sig_23");
    sc_trace(mVcdFile, threadIdx_z_fu_136_p2, "threadIdx_z_fu_136_p2");
    sc_trace(mVcdFile, threadIdx_z_reg_245, "threadIdx_z_reg_245");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_72, "ap_sig_72");
    sc_trace(mVcdFile, next_mul_fu_142_p2, "next_mul_fu_142_p2");
    sc_trace(mVcdFile, next_mul_reg_250, "next_mul_reg_250");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_81, "ap_sig_81");
    sc_trace(mVcdFile, tmp_6_fu_152_p2, "tmp_6_fu_152_p2");
    sc_trace(mVcdFile, tmp_6_reg_258, "tmp_6_reg_258");
    sc_trace(mVcdFile, tmp_17_cast_fu_162_p3, "tmp_17_cast_fu_162_p3");
    sc_trace(mVcdFile, tmp_17_cast_reg_263, "tmp_17_cast_reg_263");
    sc_trace(mVcdFile, exitcond1_fu_147_p2, "exitcond1_fu_147_p2");
    sc_trace(mVcdFile, C_addr_reg_268, "C_addr_reg_268");
    sc_trace(mVcdFile, threadIdx_x_fu_190_p2, "threadIdx_x_fu_190_p2");
    sc_trace(mVcdFile, threadIdx_x_reg_276, "threadIdx_x_reg_276");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_100, "ap_sig_100");
    sc_trace(mVcdFile, exitcond_fu_185_p2, "exitcond_fu_185_p2");
    sc_trace(mVcdFile, is_0iter_fu_210_p2, "is_0iter_fu_210_p2");
    sc_trace(mVcdFile, is_0iter_reg_286, "is_0iter_reg_286");
    sc_trace(mVcdFile, Csub_block_load_reg_290, "Csub_block_load_reg_290");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_115, "ap_sig_115");
    sc_trace(mVcdFile, threadIdx_2_reg_87, "threadIdx_2_reg_87");
    sc_trace(mVcdFile, threadIdx_y_reg_98, "threadIdx_y_reg_98");
    sc_trace(mVcdFile, exitcond2_fu_131_p2, "exitcond2_fu_131_p2");
    sc_trace(mVcdFile, phi_mul_reg_109, "phi_mul_reg_109");
    sc_trace(mVcdFile, threadIdx_reg_120, "threadIdx_reg_120");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_137, "ap_sig_137");
    sc_trace(mVcdFile, tmp_19_cast_fu_205_p1, "tmp_19_cast_fu_205_p1");
    sc_trace(mVcdFile, tmp_7_fu_175_p1, "tmp_7_fu_175_p1");
    sc_trace(mVcdFile, tmp_fu_158_p1, "tmp_fu_158_p1");
    sc_trace(mVcdFile, tmp_s_fu_170_p2, "tmp_s_fu_170_p2");
    sc_trace(mVcdFile, tmp_5_fu_196_p1, "tmp_5_fu_196_p1");
    sc_trace(mVcdFile, tmp_8_fu_200_p2, "tmp_8_fu_200_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

matrixMul_matrixMul_TRN_10::~matrixMul_matrixMul_TRN_10() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void matrixMul_matrixMul_TRN_10::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_185_p2.read()))) {
        phi_mul_reg_109 = next_mul_reg_250.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_131_p2.read()))) {
        phi_mul_reg_109 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_147_p2.read(), ap_const_lv1_0))) {
        threadIdx_2_reg_87 = threadIdx_z_reg_245.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        threadIdx_2_reg_87 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         !esl_seteq<1,1,1>(C_req_full_n.read(), ap_const_logic_0))) {
        threadIdx_reg_120 = threadIdx_x_reg_276.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_147_p2.read(), ap_const_lv1_0))) {
        threadIdx_reg_120 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_185_p2.read()))) {
        threadIdx_y_reg_98 = tmp_6_reg_258.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_131_p2.read()))) {
        threadIdx_y_reg_98 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(exitcond1_fu_147_p2.read(), ap_const_lv1_0))) {
        C_addr_reg_268 =  (sc_lv<32>) (tmp_7_fu_175_p1.read());
        tmp_17_cast_reg_263 = tmp_17_cast_fu_162_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        Csub_block_load_reg_290 = Csub_block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_185_p2.read()))) {
        is_0iter_reg_286 = is_0iter_fu_210_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        next_mul_reg_250 = next_mul_fu_142_p2.read();
        tmp_6_reg_258 = tmp_6_fu_152_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        threadIdx_x_reg_276 = threadIdx_x_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        threadIdx_z_reg_245 = threadIdx_z_fu_136_p2.read();
    }
}

void matrixMul_matrixMul_TRN_10::thread_C_address() {
    C_address = C_addr_reg_268.read();
}

void matrixMul_matrixMul_TRN_10::thread_C_dataout() {
    C_dataout = Csub_block_load_reg_290.read();
}

void matrixMul_matrixMul_TRN_10::thread_C_req_din() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          !esl_seteq<1,1,1>(C_req_full_n.read(), ap_const_logic_0)))) {
        C_req_din = ap_const_logic_1;
    } else {
        C_req_din = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_C_req_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          !esl_seteq<1,1,1>(C_req_full_n.read(), ap_const_logic_0)))) {
        C_req_write = ap_const_logic_1;
    } else {
        C_req_write = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_C_rsp_read() {
    C_rsp_read = ap_const_logic_0;
}

void matrixMul_matrixMul_TRN_10::thread_C_size() {
    C_size = blockDim_x.read();
}

void matrixMul_matrixMul_TRN_10::thread_Csub_block_address0() {
    Csub_block_address0 =  (sc_lv<8>) (tmp_19_cast_fu_205_p1.read());
}

void matrixMul_matrixMul_TRN_10::thread_Csub_block_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        Csub_block_ce0 = ap_const_logic_1;
    } else {
        Csub_block_ce0 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_131_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_131_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_100() {
    ap_sig_100 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_115() {
    ap_sig_115 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_137() {
    ap_sig_137 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_23() {
    ap_sig_23 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_72() {
    ap_sig_72 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_81() {
    ap_sig_81 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_23.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_72.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_81.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_100.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_115.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_137.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10::thread_exitcond1_fu_147_p2() {
    exitcond1_fu_147_p2 = (!threadIdx_y_reg_98.read().is_01() || !blockDim_y.read().is_01())? sc_lv<1>(): sc_lv<1>(threadIdx_y_reg_98.read() == blockDim_y.read());
}

void matrixMul_matrixMul_TRN_10::thread_exitcond2_fu_131_p2() {
    exitcond2_fu_131_p2 = (!threadIdx_2_reg_87.read().is_01() || !blockDim_z.read().is_01())? sc_lv<1>(): sc_lv<1>(threadIdx_2_reg_87.read() == blockDim_z.read());
}

void matrixMul_matrixMul_TRN_10::thread_exitcond_fu_185_p2() {
    exitcond_fu_185_p2 = (!threadIdx_reg_120.read().is_01() || !blockDim_x.read().is_01())? sc_lv<1>(): sc_lv<1>(threadIdx_reg_120.read() == blockDim_x.read());
}

void matrixMul_matrixMul_TRN_10::thread_is_0iter_fu_210_p2() {
    is_0iter_fu_210_p2 = (!threadIdx_reg_120.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(threadIdx_reg_120.read() == ap_const_lv32_0);
}

void matrixMul_matrixMul_TRN_10::thread_next_mul_fu_142_p2() {
    next_mul_fu_142_p2 = (!phi_mul_reg_109.read().is_01() || !wB.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_109.read()) + sc_biguint<32>(wB.read()));
}

void matrixMul_matrixMul_TRN_10::thread_threadIdx_x_fu_190_p2() {
    threadIdx_x_fu_190_p2 = (!threadIdx_reg_120.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(threadIdx_reg_120.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void matrixMul_matrixMul_TRN_10::thread_threadIdx_z_fu_136_p2() {
    threadIdx_z_fu_136_p2 = (!threadIdx_2_reg_87.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(threadIdx_2_reg_87.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void matrixMul_matrixMul_TRN_10::thread_tmp_17_cast_fu_162_p3() {
    tmp_17_cast_fu_162_p3 = esl_concat<6,4>(tmp_fu_158_p1.read(), ap_const_lv4_0);
}

void matrixMul_matrixMul_TRN_10::thread_tmp_19_cast_fu_205_p1() {
    tmp_19_cast_fu_205_p1 = esl_zext<64,10>(tmp_8_fu_200_p2.read());
}

void matrixMul_matrixMul_TRN_10::thread_tmp_5_fu_196_p1() {
    tmp_5_fu_196_p1 = threadIdx_reg_120.read().range(10-1, 0);
}

void matrixMul_matrixMul_TRN_10::thread_tmp_6_fu_152_p2() {
    tmp_6_fu_152_p2 = (!threadIdx_y_reg_98.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(threadIdx_y_reg_98.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void matrixMul_matrixMul_TRN_10::thread_tmp_7_fu_175_p1() {
    tmp_7_fu_175_p1 = esl_zext<64,32>(tmp_s_fu_170_p2.read());
}

void matrixMul_matrixMul_TRN_10::thread_tmp_8_fu_200_p2() {
    tmp_8_fu_200_p2 = (!tmp_17_cast_reg_263.read().is_01() || !tmp_5_fu_196_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_17_cast_reg_263.read()) + sc_biguint<10>(tmp_5_fu_196_p1.read()));
}

void matrixMul_matrixMul_TRN_10::thread_tmp_fu_158_p1() {
    tmp_fu_158_p1 = threadIdx_y_reg_98.read().range(6-1, 0);
}

void matrixMul_matrixMul_TRN_10::thread_tmp_s_fu_170_p2() {
    tmp_s_fu_170_p2 = (!phi_mul_reg_109.read().is_01() || !c_r.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_109.read()) + sc_biguint<32>(c_r.read()));
}

void matrixMul_matrixMul_TRN_10::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_131_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(exitcond1_fu_147_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_185_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(C_req_full_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

