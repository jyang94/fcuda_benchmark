// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixMul_matrixMul_TRN_10_wrapper.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixMul_matrixMul_TRN_10_wrapper::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixMul_matrixMul_TRN_10_wrapper::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> matrixMul_matrixMul_TRN_10_wrapper::ap_ST_st1_fsm_0 = "1";
const sc_lv<2> matrixMul_matrixMul_TRN_10_wrapper::ap_ST_st2_fsm_1 = "10";
const sc_lv<32> matrixMul_matrixMul_TRN_10_wrapper::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matrixMul_matrixMul_TRN_10_wrapper::ap_const_lv1_1 = "1";
const sc_lv<32> matrixMul_matrixMul_TRN_10_wrapper::ap_const_lv32_1 = "1";

matrixMul_matrixMul_TRN_10_wrapper::matrixMul_matrixMul_TRN_10_wrapper(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_matrixMul_matrixMul_TRN_10_fu_58 = new matrixMul_matrixMul_TRN_10("grp_matrixMul_matrixMul_TRN_10_fu_58");
    grp_matrixMul_matrixMul_TRN_10_fu_58->ap_clk(ap_clk);
    grp_matrixMul_matrixMul_TRN_10_fu_58->ap_rst(ap_rst);
    grp_matrixMul_matrixMul_TRN_10_fu_58->ap_start(grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start);
    grp_matrixMul_matrixMul_TRN_10_fu_58->ap_done(grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done);
    grp_matrixMul_matrixMul_TRN_10_fu_58->ap_idle(grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle);
    grp_matrixMul_matrixMul_TRN_10_fu_58->ap_ready(grp_matrixMul_matrixMul_TRN_10_fu_58_ap_ready);
    grp_matrixMul_matrixMul_TRN_10_fu_58->blockDim_x(blockDim_x);
    grp_matrixMul_matrixMul_TRN_10_fu_58->blockDim_y(blockDim_y);
    grp_matrixMul_matrixMul_TRN_10_fu_58->blockDim_z(blockDim_z);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_req_din(grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_din);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_req_full_n(C_req_full_n);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_req_write(grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_write);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_rsp_empty_n(C_rsp_empty_n);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_rsp_read(grp_matrixMul_matrixMul_TRN_10_fu_58_C_rsp_read);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_address(grp_matrixMul_matrixMul_TRN_10_fu_58_C_address);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_datain(C_datain);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_dataout(grp_matrixMul_matrixMul_TRN_10_fu_58_C_dataout);
    grp_matrixMul_matrixMul_TRN_10_fu_58->C_size(grp_matrixMul_matrixMul_TRN_10_fu_58_C_size);
    grp_matrixMul_matrixMul_TRN_10_fu_58->Csub_block_address0(grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_address0);
    grp_matrixMul_matrixMul_TRN_10_fu_58->Csub_block_ce0(grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_ce0);
    grp_matrixMul_matrixMul_TRN_10_fu_58->Csub_block_q0(Csub_block_block0_q0);
    grp_matrixMul_matrixMul_TRN_10_fu_58->c_r(c_block0);
    grp_matrixMul_matrixMul_TRN_10_fu_58->wB(wB);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_address);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_C_address );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_C_dataout);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_C_dataout );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_C_req_din);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_din );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_C_req_write);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_write );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_C_rsp_read);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_C_rsp_read );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_C_size);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_C_size );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_Csub_block_block0_address0);
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_Csub_block_block0_ce0);
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_sig_19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_19 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_91 );

    SC_METHOD(thread_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start);
    sensitive << ( ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done );

    ap_CS_fsm = "01";
    ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixMul_matrixMul_TRN_10_wrapper_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, blockDim_x, "(port)blockDim_x");
    sc_trace(mVcdFile, blockDim_y, "(port)blockDim_y");
    sc_trace(mVcdFile, blockDim_z, "(port)blockDim_z");
    sc_trace(mVcdFile, C_req_din, "(port)C_req_din");
    sc_trace(mVcdFile, C_req_full_n, "(port)C_req_full_n");
    sc_trace(mVcdFile, C_req_write, "(port)C_req_write");
    sc_trace(mVcdFile, C_rsp_empty_n, "(port)C_rsp_empty_n");
    sc_trace(mVcdFile, C_rsp_read, "(port)C_rsp_read");
    sc_trace(mVcdFile, C_address, "(port)C_address");
    sc_trace(mVcdFile, C_datain, "(port)C_datain");
    sc_trace(mVcdFile, C_dataout, "(port)C_dataout");
    sc_trace(mVcdFile, C_size, "(port)C_size");
    sc_trace(mVcdFile, Csub_block_block0_address0, "(port)Csub_block_block0_address0");
    sc_trace(mVcdFile, Csub_block_block0_ce0, "(port)Csub_block_block0_ce0");
    sc_trace(mVcdFile, Csub_block_block0_q0, "(port)Csub_block_block0_q0");
    sc_trace(mVcdFile, c_block0, "(port)c_block0");
    sc_trace(mVcdFile, wB, "(port)wB");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_19, "ap_sig_19");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start, "grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done, "grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle, "grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_ready, "grp_matrixMul_matrixMul_TRN_10_fu_58_ap_ready");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_din, "grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_din");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_write, "grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_write");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_C_rsp_read, "grp_matrixMul_matrixMul_TRN_10_fu_58_C_rsp_read");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_C_address, "grp_matrixMul_matrixMul_TRN_10_fu_58_C_address");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_C_dataout, "grp_matrixMul_matrixMul_TRN_10_fu_58_C_dataout");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_C_size, "grp_matrixMul_matrixMul_TRN_10_fu_58_C_size");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_address0, "grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_address0");
    sc_trace(mVcdFile, grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_ce0, "grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_ce0");
    sc_trace(mVcdFile, ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start, "ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_91, "ap_sig_91");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

matrixMul_matrixMul_TRN_10_wrapper::~matrixMul_matrixMul_TRN_10_wrapper() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_matrixMul_matrixMul_TRN_10_fu_58;
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_ready.read())) {
            ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start = ap_const_logic_0;
        }
    }
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_C_address() {
    C_address = grp_matrixMul_matrixMul_TRN_10_fu_58_C_address.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_C_dataout() {
    C_dataout = grp_matrixMul_matrixMul_TRN_10_fu_58_C_dataout.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_C_req_din() {
    C_req_din = grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_din.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_C_req_write() {
    C_req_write = grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_write.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_C_rsp_read() {
    C_rsp_read = grp_matrixMul_matrixMul_TRN_10_fu_58_C_rsp_read.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_C_size() {
    C_size = grp_matrixMul_matrixMul_TRN_10_fu_58_C_size.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_Csub_block_block0_address0() {
    Csub_block_block0_address0 = grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_address0.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_Csub_block_block0_ce0() {
    Csub_block_block0_ce0 = grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_ce0.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_logic_0, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_sig_19() {
    ap_sig_19 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_sig_91() {
    ap_sig_91 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_19.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_91.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start() {
    grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start = ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start.read();
}

void matrixMul_matrixMul_TRN_10_wrapper::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

