// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixMul_matrixMul_TRN_10_wrapper_HH_
#define _matrixMul_matrixMul_TRN_10_wrapper_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixMul_matrixMul_TRN_10.h"

namespace ap_rtl {

struct matrixMul_matrixMul_TRN_10_wrapper : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > blockDim_x;
    sc_in< sc_lv<32> > blockDim_y;
    sc_in< sc_lv<32> > blockDim_z;
    sc_out< sc_logic > C_req_din;
    sc_in< sc_logic > C_req_full_n;
    sc_out< sc_logic > C_req_write;
    sc_in< sc_logic > C_rsp_empty_n;
    sc_out< sc_logic > C_rsp_read;
    sc_out< sc_lv<32> > C_address;
    sc_in< sc_lv<32> > C_datain;
    sc_out< sc_lv<32> > C_dataout;
    sc_out< sc_lv<32> > C_size;
    sc_out< sc_lv<8> > Csub_block_block0_address0;
    sc_out< sc_logic > Csub_block_block0_ce0;
    sc_in< sc_lv<32> > Csub_block_block0_q0;
    sc_in< sc_lv<32> > c_block0;
    sc_in< sc_lv<32> > wB;


    // Module declarations
    matrixMul_matrixMul_TRN_10_wrapper(sc_module_name name);
    SC_HAS_PROCESS(matrixMul_matrixMul_TRN_10_wrapper);

    ~matrixMul_matrixMul_TRN_10_wrapper();

    sc_trace_file* mVcdFile;

    matrixMul_matrixMul_TRN_10* grp_matrixMul_matrixMul_TRN_10_fu_58;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_19;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_ap_done;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_ap_idle;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_ap_ready;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_din;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_C_req_write;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_C_rsp_read;
    sc_signal< sc_lv<32> > grp_matrixMul_matrixMul_TRN_10_fu_58_C_address;
    sc_signal< sc_lv<32> > grp_matrixMul_matrixMul_TRN_10_fu_58_C_dataout;
    sc_signal< sc_lv<32> > grp_matrixMul_matrixMul_TRN_10_fu_58_C_size;
    sc_signal< sc_lv<8> > grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_address0;
    sc_signal< sc_logic > grp_matrixMul_matrixMul_TRN_10_fu_58_Csub_block_ce0;
    sc_signal< sc_logic > ap_reg_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_91;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_C_address();
    void thread_C_dataout();
    void thread_C_req_din();
    void thread_C_req_write();
    void thread_C_rsp_read();
    void thread_C_size();
    void thread_Csub_block_block0_address0();
    void thread_Csub_block_block0_ce0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_19();
    void thread_ap_sig_91();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_grp_matrixMul_matrixMul_TRN_10_fu_58_ap_start();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
